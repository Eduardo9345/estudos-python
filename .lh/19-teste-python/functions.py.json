{
    "sourceFile": "19-teste-python/functions.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1758228680018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758318003484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,5 +4,8 @@\n def length(list):\r\n     return len(list)\r\n \r\n def is_positive(number):\r\n-    return number > 0\n\\ No newline at end of file\n+    return number > 0\r\n+\r\n+def valida_email(email):\r\n+    return ('@' in email) and ('.' in email)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758318500581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,5 +7,12 @@\n def is_positive(number):\r\n     return number > 0\r\n \r\n def valida_email(email):\r\n-    return ('@' in email) and ('.' in email)\n\\ No newline at end of file\n+    return ('@' in email) and ('.' in email)\r\n+\r\n+def somar_lista(valores):\r\n+    \"\"\" Soma todos os valores em uma lista \"\"\"\r\n+    if not all(isinstance(i, (int, float)) for i in valores):\r\n+        raise ValueError(\"Todos os itens da lista devem ser números\")\r\n+    \r\n+    return sum(valores)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758318543723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,8 @@\n     \"\"\" Soma todos os valores em uma lista \"\"\"\r\n     if not all(isinstance(i, (int, float)) for i in valores):\r\n         raise ValueError(\"Todos os itens da lista devem ser números\")\r\n     \r\n-    return sum(valores)\n\\ No newline at end of file\n+    return sum(valores)\r\n+\r\n+def encontrar_valor(dicionario, chave):\r\n+    \"\"\"Retorna o valor associado a uma chave e um dicionário\"\"\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758318615247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,5 +17,9 @@\n     \r\n     return sum(valores)\r\n \r\n def encontrar_valor(dicionario, chave):\r\n-    \"\"\"Retorna o valor associado a uma chave e um dicionário\"\"\"\n\\ No newline at end of file\n+    \"\"\"Retorna o valor associado a uma chave e um dicionário\"\"\"\r\n+    if not isinstance(dicionario, dict):\r\n+        raise ValueError(\"o primeiro argumento deve ser um dicionario\")\r\n+    \r\n+    return dicionario.get(chave, None)\n\\ No newline at end of file\n"
                }
            ],
            "date": 1758228680018,
            "name": "Commit-0",
            "content": "def sub(a, b):\r\n    return a - b\r\n\r\ndef length(list):\r\n    return len(list)\r\n\r\ndef is_positive(number):\r\n    return number > 0"
        }
    ]
}