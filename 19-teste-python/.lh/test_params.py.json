{
    "sourceFile": "test_params.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1759242527236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759242575053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,12 +28,12 @@\n         {\"base\" : 0, \"altura\" :  10, \"resultado_esperado\" : 0},\r\n         {\"base\" : 10, \"altura\" :  0, \"resultado_esperado\" : 0}\r\n     ]\r\n )\r\n-def test_calcular_area(dados):\r\n-    base = dados['base']\r\n-    altura = dados['altura']\r\n-    esperado = dados ['resultado_esperado']\r\n+def test_calcular_area(dados_teste):\r\n+    base = dados_teste['base']\r\n+    altura = dados_teste['altura']\r\n+    esperado = dados_teste['resultado_esperado']\r\n     \r\n     resultado = calcular_area(base, altura)\r\n     \r\n     assert(resultado == esperado)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1759242610374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,20 +20,14 @@\n \r\n \r\n @pytest.mark.parametrize(\r\n     \"dados\",\r\n-    [\r\n-        {\"base\" : 2, \"altura\" :  3, \"resultado_esperado\" : 6},\r\n-        {\"base\" : 5, \"altura\" :  4, \"resultado_esperado\" : 20},\r\n-        {\"base\" : 7, \"altura\" :  2, \"resultado_esperado\" : 14},\r\n-        {\"base\" : 0, \"altura\" :  10, \"resultado_esperado\" : 0},\r\n-        {\"base\" : 10, \"altura\" :  0, \"resultado_esperado\" : 0}\r\n-    ]\r\n+    dados_teste\r\n )\r\n-def test_calcular_area(dados_teste):\r\n-    base = dados_teste['base']\r\n-    altura = dados_teste['altura']\r\n-    esperado = dados_teste['resultado_esperado']\r\n+def test_calcular_area(dados):\r\n+    base = dados['base']\r\n+    altura = dados['altura']\r\n+    esperado = dados ['resultado_esperado']\r\n     \r\n     resultado = calcular_area(base, altura)\r\n     \r\n     assert(resultado == esperado)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1759242637979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,11 @@\n \r\n \r\n @pytest.mark.parametrize(\r\n     \"dados\",\r\n-    dados_teste\r\n+    [\r\n+        dados_teste\r\n+    ]\r\n )\r\n def test_calcular_area(dados):\r\n     base = dados['base']\r\n     altura = dados['altura']\r\n"
                },
                {
                    "date": 1759242649603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,13 @@\n \r\n @pytest.mark.parametrize(\r\n     \"dados\",\r\n     [\r\n-        dados_teste\r\n+        {\"base\" : 2, \"altura\" :  3, \"resultado_esperado\" : 6},\r\n+        {\"base\" : 5, \"altura\" :  4, \"resultado_esperado\" : 20},\r\n+        {\"base\" : 7, \"altura\" :  2, \"resultado_esperado\" : 14},\r\n+        {\"base\" : 0, \"altura\" :  10, \"resultado_esperado\" : 0},\r\n+        {\"base\" : 10, \"altura\" :  0, \"resultado_esperado\" : 0}\r\n     ]\r\n )\r\n def test_calcular_area(dados):\r\n     base = dados['base']\r\n"
                }
            ],
            "date": 1759242527236,
            "name": "Commit-0",
            "content": "import pytest\r\n\r\ndef calcular_area(base, altura):\r\n    return base * altura\r\n\r\n\r\n@pytest.fixture\r\ndef dados_teste():\r\n    \"\"\"\r\n    Fixture que fornece diferentes conjuntos de dados para\r\n    testar a função de calculo de  área\r\n    \"\"\"\r\n    return  [\r\n        {\"base\" : 2, \"altura\" :  3, \"resultado_esperado\" : 6},\r\n        {\"base\" : 5, \"altura\" :  4, \"resultado_esperado\" : 20},\r\n        {\"base\" : 7, \"altura\" :  2, \"resultado_esperado\" : 14},\r\n        {\"base\" : 0, \"altura\" :  10, \"resultado_esperado\" : 0},\r\n        {\"base\" : 10, \"altura\" :  0, \"resultado_esperado\" : 0}\r\n    ]\r\n\r\n\r\n@pytest.mark.parametrize(\r\n    \"dados\",\r\n    [\r\n        {\"base\" : 2, \"altura\" :  3, \"resultado_esperado\" : 6},\r\n        {\"base\" : 5, \"altura\" :  4, \"resultado_esperado\" : 20},\r\n        {\"base\" : 7, \"altura\" :  2, \"resultado_esperado\" : 14},\r\n        {\"base\" : 0, \"altura\" :  10, \"resultado_esperado\" : 0},\r\n        {\"base\" : 10, \"altura\" :  0, \"resultado_esperado\" : 0}\r\n    ]\r\n)\r\ndef test_calcular_area(dados):\r\n    base = dados['base']\r\n    altura = dados['altura']\r\n    esperado = dados ['resultado_esperado']\r\n    \r\n    resultado = calcular_area(base, altura)\r\n    \r\n    assert(resultado == esperado)"
        }
    ]
}